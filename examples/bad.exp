//vide
struct S1 {
};

// double declaration de meme idf
struct S1 {
    int a;
};

struct S2 {
    int a ;
    int b ;
};

struct S3 {
    struct S1 * one, *two;
    struct S2 * three, *four;
    int c, d;
    struct S1 * one ;  // unicité de déclaration de champs de struct
};

//fonction avec type de retour : INT
int fctI(struct S3 * ab1, int c) {
    while (c > 0) {
        int a;
        struct S3 * ab2, *ab3;
        struct S1 * a ; //une double déclaration de a
        if (ab1->three->a > 0) {
            int b, c ;
            while (ab1->three->a > 0)  {
                int d ;
                if (ab1->c > 0) {
                    int f ;
                    //int z ; // ne pas déclarer res comme ça on utilise une var pas déclaré
                    z = 0;
                    ab2 = ab2->c + 1 ;   // int affecté à une struct S3
                    while (ab1->c > 0) {
                        int res ;
                        struct S2 * ab2, *ab3;
                        c = c-1 ;
                        print(c) ;
                        res = c;
                        return res;
                    }
                }
                ab1->three->a = ab1->three->a - 1;
            }
        }
    }
    //WARNING : pas de return
}

//fonction avec type de retour : Struct
struct S3 * fctS() {
    int resI ;
    struct S3 * cd ;
    resI = 0;
    cd = malloc(sizeof(struct S3)) ;
    return resI ; // return un int et pas struct
}

// double déclaration de fctI ( la première return int et là return struct )
struct S1 * fctI() {
    struct S1 * a ;
    return a;
}

// double déclaration de fctS ( la première return struct et là return int )
int fctS(int a, int b, struct S3 * c) {
    return a;
}

// à supprimer le main
// des params dans la fonction main
int main(int a, int b) {
    int res ;
    struct S3 * s ;
    struct S2 * d ;
    struct S4 * i ; // une structure pas définie
    d = malloc(s) ; // ça doit prendre comme param un int

    print(res);
    d = malloc(sizeof(struct S2));
    s = malloc(sizeof(struct S3));
    d->a = 10;                          // affectation (typage)
    d->b = 5;
    d->c = 6; // n'acceder qu'aux champs def

    print(s) // print doit juste print un int
    res = fct(5, s) ;                   // fonction pas définie
    res = fctI(5, s);                   // ordre des params
    res = fctI(5, 2, s);                // nombre de param
    res = fctI(5,5) ;                   // type de params
    return res;                         // type de retour d'une fonction
}
